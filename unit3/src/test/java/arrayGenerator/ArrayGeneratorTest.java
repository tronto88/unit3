package arrayGenerator;

import org.junit.jupiter.api.Test;
import main.java.arrayGenerator.ArrayGenerator;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

/**
 * A tester class for ArrayGenerators.  This class defines a single tester method, that can be used to check that
 * array generators generate arrays of the required size, and uses this to define some simple size tests.
 * Implementing classes should implement getGenerator to return an array generator of the relevant type.
 *
 * @author Hugh Osborne
 * @version September 2020
 */

abstract class ArrayGeneratorTest {

    /**
     * Get an array generator to be tested.  This is used by the testContents method.  Different implementations of
     * can define this method to return a listing generator of the required type.
     * @param size the size of the listing to be generated by the generator.
     * @return a listing generator that will create a listing of the required size.
     */
    protected abstract ArrayGenerator getGenerator(int size);

    /**
     * Check that the generator generates arrays of the required size.
     * @param size the size of array to be generated.
     */
    public void testSize(int size) {
        ArrayGenerator generator = getGenerator(size); // get a generator of the required size

        // Check that it IS the right size
        assertEquals(size, generator.getSize(), "Generator has the wrong size");
        // and that it generates arrays of the right size
        assertEquals(size, generator.getArray().length, "Generator does not create arrays of the wight size");
    }

    // Now define some tests to test array generator sizes.

    @Test
    public void testOneSize() {
        testSize(1);
    }

    @Test
    public void testTwoSize() {
        testSize(2);
    }

    @Test
    public void testFourSize() {
        testSize(4);
    }

    @Test
    public void testHundredSize() {
        testSize(100);
    }

    @Test
    public void testThousandSize() {
        testSize(1000);
    }

    @Test
    public void testMillionSize() {
        testSize(1000000);
    }
}